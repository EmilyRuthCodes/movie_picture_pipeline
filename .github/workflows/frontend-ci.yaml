# There should be a file called .github/workflows/frontend-ci.yaml in the root of the project.
name: 'Frontend CI Pipeline'
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main


# The following jobs should be present

# LINT JOB: There should be a job in the workflow that runs linting. The job should have these steps:

# Checkout code
# Setup NodeJS
# Perform a cache action to restore cache before dependency install
# Install dependencies
# Run the npm run lint command

jobs:
  lint:
    name: Lint Job
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: ðŸ”Ž List root files
        run: ls -R .

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Restore Node.js modules cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run Linter
        run: cd frontend && npm run lint

# TEST JOB: There should be a job in the workflow that runs the tests The job should have these steps:
# Checkout code
# Setup NodeJS
# Perform a cache action to restore cache before dependency install
# Install dependencies
# Run the npm run test command
# The two jobs above should run in parallel

  test:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run Tests
        run: cd frontend && npm run test

# BUILD JOB: This job should only run after the first 2 succeed (student has to use the "needs" syntax) There should be a step that builds the application using docker. The job should have these steps:

# Checkout code
# Setup NodeJS
# Perform a cache action to restore cache before dependency install
# Install dependencies
# Run the npm run test command

  build:
    name: Build Job
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run Tests
        run: cd frontend && npm run test
      
      - name: Build Docker Image
        run: |
          docker build -t movie-picture-frontend ./frontend

# The pipeline should be executed automatically on pull_request The pipeline should be able to be run manually The pipeline should be running without errors with all tests passing and no output failures from any of the steps
